<?php
//
// RyzomSheets - https://github.com/nimetu/ryzom_sheets
// Copyright (c) 2012 Meelis MÃ¤gi <nimetu@gmail.com>
//
// This file is part of RyzomSheets.
//
// RyzomSheets is free software; you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// RyzomSheets is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program; if not, write to the Free Software Foundation,
// Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301  USA
//

namespace Ryzom\Misc;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-06-06 at 09:40:55.
 *
 * Note:
 * $bit->{'Field1'} is used to silence IDE 'Field not found' warnings
 */
class BitStructTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @covers Ryzom\Misc\BitStruct::setValue
     * @covers Ryzom\Misc\BitStruct::__get
     */
    public function testSetValue()
    {
        $bit = new BitStruct(array(
            'Field1' => 12,
            'Field2' => 6,
            'Field3' => 2,
            'Field4' => 11,
            'Field5' => 1,
        ));
        $this->assertEquals(0, $bit->getValue());

        $this->assertEquals(0, $bit->{'Field1'});
        $this->assertEquals(0, $bit->{'Field2'});
        $this->assertEquals(0, $bit->{'Field3'});
        $this->assertEquals(0, $bit->{'Field4'});
        $this->assertEquals(0, $bit->{'Field5'});

        // this value sets all fields to 1
        $value = '2148798465';
        $bit->setValue($value);

        $this->assertEquals($value, $bit->getValue());
        $this->assertEquals(1, $bit->{'Field1'});
        $this->assertEquals(1, $bit->{'Field2'});
        $this->assertEquals(1, $bit->{'Field3'});
        $this->assertEquals(1, $bit->{'Field4'});
        $this->assertEquals(1, $bit->{'Field5'});
    }

    /**
     * @covers Ryzom\Misc\BitStruct::getValue
     * @covers Ryzom\Misc\BitStruct::__set
     */
    public function _testGetValue()
    {
        // 32bit
        $bit = new BitStruct(array(
            'Field1' => 12,
            'Field2' => 6,
            'Field3' => 2,
            'Field4' => 11,
            'Field5' => 1,
        ));

        // initial values
        $this->assertEquals(0, $bit->getValue());
        $this->assertEquals(0, $bit->{'Field1'});
        $this->assertEquals(0, $bit->{'Field2'});
        $this->assertEquals(0, $bit->{'Field3'});
        $this->assertEquals(0, $bit->{'Field5'});

        // expected value when all fields are 1
        $value = '2148798465';
        $bit->{'Field1'} = 1;
        $bit->{'Field2'} = 1;
        $bit->{'Field3'} = 1;
        $bit->{'Field4'} = 1;
        $bit->{'Field5'} = 1;

        // setting field modified getValue()
        $this->assertEquals($value, $bit->getValue());
        $this->assertEquals(1, $bit->{'Field1'});
        $this->assertEquals(1, $bit->{'Field2'});
        $this->assertEquals(1, $bit->{'Field3'});
        $this->assertEquals(1, $bit->{'Field4'});
        $this->assertEquals(1, $bit->{'Field5'});
    }

}
